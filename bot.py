import os
import threading
from flask import Flask
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –ë–µ—Ä—ë–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TOKEN")
if not TOKEN:
    print("ERROR: TOKEN not set. Set environment variable TOKEN and restart.")
    exit(1)

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_kb = ReplyKeyboardMarkup(resize_keyboard=True)
main_kb.add(KeyboardButton("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É"))
main_kb.add(KeyboardButton("–ú–æ–π –æ—Ç—á—ë—Ç –∑–∞ —Å–µ–≥–æ–¥–Ω—è"))

@dp.message_handler(commands=["start"])
async def start_cmd(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç üëã\n–Ø –ø–æ–º–æ–≥—É —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–µ –≤—Ä–µ–º—è –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º.",
        reply_markup=main_kb
    )

@dp.message_handler(lambda msg: msg.text == "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É")
async def start_work(message: types.Message):
    # –ó–¥–µ—Å—å –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏–º –≤—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤
    await message.answer("–¢—É—Ç –ø–æ–∑–∂–µ –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ ‚úÖ")

@dp.message_handler(lambda msg: msg.text == "–ú–æ–π –æ—Ç—á—ë—Ç –∑–∞ —Å–µ–≥–æ–¥–Ω—è")
async def today_report(message: types.Message):
    # –ü–æ–∑–∂–µ –±—É–¥–µ–º –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —á–∞—Å—ã –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º
    await message.answer("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç—á—ë—Ç –ø–æ —Ç–≤–æ–∏–º —á–∞—Å–∞–º üìä")

# Web-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render health-check
def run_web():
    app = Flask(__name__)

    @app.route("/")
    def index():
        return "OK"

    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)

if __name__ == "__main__":
    # –∑–∞–ø—É—Å–∫–∞–µ–º web-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    t = threading.Thread(target=run_web)
    t.start()

    # –∑–∞–ø—É—Å–∫–∞–µ–º polling –¥–ª—è Telegram
    executor.start_polling(dp, skip_updates=True)
